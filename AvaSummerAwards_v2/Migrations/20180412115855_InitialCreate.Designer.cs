// <auto-generated />
using Awards.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Awards.Migrations
{
    [DbContext(typeof(AwardsContext))]
    [Migration("20180412115855_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Awards.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Awards.Models.Nomination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Anonymous");

                    b.Property<string>("Nominator");

                    b.Property<int>("NomineeID");

                    b.Property<string>("Reason");

                    b.HasKey("ID");

                    b.HasIndex("NomineeID");

                    b.ToTable("Nominations");
                });

            modelBuilder.Entity("Awards.Models.Nominee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryID");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Nominees");
                });

            modelBuilder.Entity("Awards.Models.Vote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NomineeID");

                    b.Property<string>("Voter");

                    b.HasKey("ID");

                    b.HasIndex("NomineeID");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Awards.Models.Nomination", b =>
                {
                    b.HasOne("Awards.Models.Nominee")
                        .WithMany("Nominations")
                        .HasForeignKey("NomineeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Awards.Models.Nominee", b =>
                {
                    b.HasOne("Awards.Models.Category")
                        .WithMany("Nominees")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Awards.Models.Vote", b =>
                {
                    b.HasOne("Awards.Models.Nominee")
                        .WithMany("Votes")
                        .HasForeignKey("NomineeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
